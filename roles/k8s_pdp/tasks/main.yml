---

########################
# Check parameters
- name: "Ensure config_mode is set properly"
  ansible.builtin.fail:
    msg:
      - "config_mode must be one of 'barebones', 'bundle', or 'das_discovery''"
      - "You specified: {{ config_mode }}"
  when:
    - config_mode != 'barebones'
    - config_mode != 'bundle'
    - config_mode != 'das_discovery'

- name: "Ensure debug_output_dir and debug are not both set"
  ansible.builtin.fail:
    msg: "debug_output_dir must be set when debug==true"
  when:
    - debug
    - debug_output_dir is not defined

- name: "Ensure required variables are set when mode is 'bundle'"
  ansible.builtin.fail:
    msg: "config_mode 'bundle' requires opa_bundle_url and opa_bundle_resource"
  when:
    - config_mode == 'bundle'
    - opa_bundle_url is not defined or opa_bundle_resource is not defined

- name: "Ensure required variables are set when mode is 'das_discovery'"
  ansible.builtin.fail:
    msg: "config_mode 'das_discovery' requires das_system_id and das_token and das_tenant"
  when:
    - config_mode == 'das_discovery'
    - das_system_id is not defined or das_token is not defined or das_tenant is not defined

#####################################################################
# Render manifests into the file system for visibility / debugging
- name: Log server manifest
  ansible.builtin.template:
    src: templates/k8s_server.yaml.j2
    dest: "{{ debug_output_dir }}/server.yaml"
    mode: '0444'
  when: debug
- name: Log OPA configuration manifest
  ansible.builtin.template:
    src: templates/k8s_config_{{ config_mode }}.yaml.j2
    dest: "{{ debug_output_dir }}/{{ config_mode }}.yaml"
    mode: '0444'
  when: debug and config_mode != 'barebones'

#####################################################################
# Render and apply those manifests to Kubernetes
- name: Ensure namespace exists
  kubernetes.core.k8s:
    name: "{{ opa_namespace }}"
    api_version: v1
    kind: Namespace
    # do NOT delete the namespace
    state: present
- name: Install OPA onto k8s
  kubernetes.core.k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'templates/k8s_server.yaml.j2' | from_yaml) }}"
- name: Install OPA configuration onto k8s
  when: config_mode != 'barebones'
  kubernetes.core.k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'templates/k8s_config_' ~ config_mode ~ '.yaml.j2' | from_yaml) }}"
